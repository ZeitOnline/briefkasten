---
- hosts: briefkasten
  user: root
  tasks:
    - name: create jails
      command: "ezjail-admin start {{item}}"
      args:
        creates: "/usr/jails/{{item}}"
      with_items:
      - webserver
      - appserver
      - cleanser
      tags: jails

- hosts: briefkasten-webserver
  user: root
  roles:
    - { role: common, tags: ['common', 'webserver'] }
    - { role: webserver, tags: ['webserver'] }
- hosts: briefkasten-appserver
  user: root
  roles:
    - { role: common, tags: ['common', 'appserver'] }
    - { role: appserver, tags: ['appserver'] }

- hosts: briefkasten-cleanser
  user: root
  tasks:
    - name: install packages
      pkgng: name={{ item }} state=present
      with_items:
      - zip
      - netpbm
      - ghostscript9-base
      - libreoffice
    - name: create cleanser user
      user:
        name: cleanser
        createhome: yes
    - name: create cleanser .ssh
      file:
        path: /usr/home/cleanser/.ssh
        owner: cleanser
        mode: "700"
        state: directory

- hosts: briefkasten
  user: root
  tasks:
    - name: install jaildaemon
      pkgng:
        name: jaildaemon
        state: present
    - name: enable jaildaemon
      service:
        name: jaildaemon
        enabled: true
        state: started
      tags: cleanser_clones
    # grant appserver's pyramid user ssh access
    - name: copy keyfile
      command: cp {{ jails_dir }}/appserver/usr/home/pyramid/.ssh/id_rsa.pub {{ jails_dir }}/cleanser/usr/home/cleanser/.ssh/authorized_keys
      args:
        creates: "{{ jails_dir }}/cleanser/usr/home/cleanser/.ssh/authorized_keys"
    - name: copy ssh pub host key
      shell: sed -E -e 's:^:{{hostvars['briefkasten-cleanser']['ploy_ip']}} :' -e 's:[^ ]+$::' {{ jails_dir }}/cleanser/etc/ssh/ssh_host_rsa_key.pub > {{ jails_dir }}/appserver/usr/home/pyramid/.ssh/known_hosts creates={{ jails_dir }}/appserver/usr/home/pyramid/.ssh/known_hosts
    - name: fix permissions on keyfile
      command: chmod 600 {{ jails_dir }}/cleanser/usr/home/cleanser/.ssh/authorized_keys
    - name: fix permissions on known_hosts
      command: chmod 600 {{ jails_dir }}/appserver/usr/home/pyramid/.ssh/known_hosts

- hosts: briefkasten-appserver
  user: root
  tasks:
    - name: fix ownership of known_hosts
      command: chown pyramid /usr/home/pyramid/.ssh/known_hosts

- hosts: briefkasten-cleanser
  user: root
  tasks:
    - name: ensure ownership of scripts
      command: chown -R cleanser /usr/home/cleanser
    - name: Upload cleanser scripts
      copy: src=../application/middleware_scripts/ dest=/usr/local/bin/

# the cleanser jail is now ready to be snapshotted and cloned
- hosts: briefkasten
  user: root
  tasks:
    - name: create cleanser snapshot
      command: "zfs snapshot tank/jails/cleanser@clonesource"
      args:
        creates: "/usr/jails/cleanser/.zfs/snapshot/clonesource"
      tags: cleanser_clones
    - name: create cleanser clones (from snapshot)
      command: "zfs clone tank/jails/cleanser@clonesource tank/jails/cleanser_{{item}}"
      args:
        creates: "/usr/jails/cleanser_{{item}}"
      with_sequence: start=1 end="{{ploy_cleanser_count}}" format="%02d"
      tags: cleanser_clones
    - name: configure sshd for cleansers
      template:
        src: templates/cleanser_sshd_config
        owner: root
        group: wheel
        mode: "0600"
        dest: "/usr/jails/cleanser_{{item}}/etc/ssh/sshd_config"
      with_sequence: start=1 end="{{ploy_cleanser_count}}" format="%02d"
      tags: cleanser_clones
    - name: configure clones for ezjail
      command: "ezjail-admin create -x cleanser_{{item}} {{hostvars['briefkasten-cleanser']['ploy_ip']}}"
      args:
        creates: "/usr/local/etc/ezjail/cleanser_{{item}}"
      with_sequence: start=1 end="{{ploy_cleanser_count}}" format="%02d"
      tags: cleanser_clones
    - name: create rollback snapshot from each clone (jdispatch_rollback)
      command: "zfs snapshot tank/jails/cleanser_{{item}}@jdispatch_rollback"
      args:
        creates: "/usr/jails/cleanser_{{item}}/.zfs/snapshot/jdispatch_rollback"
      with_sequence: start=1 end="{{ploy_cleanser_count}}" format="%02d"
      tags: cleanser_clones
    - name: install jdispatch tool
      copy:
        src: files/jdispatch.sh
        dest: /usr/local/bin/jdispatch
        owner: root
        group: wheel
        mode: "0755"
      tags:
      - cleanser_clones
      - jdispatch
    - name: configure jdispatch tool
      template:
        src: templates/jdispatch.conf
        dest: /usr/local/etc/
        owner: root
        group: wheel
        mode: "0644"
      with_sequence: start=1 end="{{ploy_cleanser_count}}" format="%02d"
      tags: cleanser_clones

