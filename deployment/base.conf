# vi:syntax=dosini
#
# this configuration file contains the defaults values only

[ez-master:briefkasten]
user = root
firstboot-update = true
bootstrap-files = ../etc/bootstrap-files
ezjail-install-release = 11.2-RELEASE
bootstrap-bsd-url = ftp://ftp.de.freebsd.org/pub/FreeBSD/releases/amd64/amd64/11.2-RELEASE/
# mfs-bsd:
bootstrap-fingerprint = 05:71:91:46:eb:45:54:74:c7:75:e2:06:b1:70:c6:bf
fabfile = jailhost.py

# can also be kummerkasten
briefkasten_flavour = briefkasten

# when set to true, you must also define the zabbix host
# and then the agent will be installed and configured on the
# jailhost
enable_zabbix = false
#zabbix_host =
roles =
  root_email
  jails_host
  jailhost


##################################################################
# the remaining values of this section usually don't need to be adjusted
# the pkg repository URL that the jails should use
ansible-jails_pkg_url = https://briefkastenpkg.zeit.de/11.1/
bootstrap-system-pool-size = 10G
bootstrap-geli = yes

[macro:ez-base]
# the FQDN under which the webserver is reached
fqdn=briefkasten.virtualbox
# if set to false it expects pre-generated certificates
use_acme = false
acme_ddns_server_port = 53
startup_script=startup-briefkasten-jail.sh
# the URL slug under which the briefkasten should be hosted
approot_url=/briefkasten/

# can also be kummerkasten
briefkasten_flavour = briefkasten

# list of editorial recipients, space separated
# cleansed submissions will be encrypted for and sent to
# each address. This means that for each address there
# needs to be a corresponding public PGP key in the system
# (etc/pgp_pubkeys)
editors=


# list of admin recipients, space separated
# admins get notified when a submission failes
# for each address the corresponding PGP key needs
# have been uploaded to the app server
admins=

# the return address used when sending out emails to editors and admins
mail_sender=
mail_host = localhost
mail_port = 25

# the email address that root emails should be sent to
# note, that there is no default here, because we want to force
# you to configure one :)
# root_email = 

# path on the control host to where a valid briefkasten theme is
# located. needs trailing slash:
local_theme_path = ../../application/themes/default/
# the name of the theme
theme_name = default

# a secret to generate valid POST urls
# no default value is provided, to avoid using a known value by accident
#post_secret = eenemeenemuh!

# how long is the submission form valid (this is to provde a defined period within
# which any given submission can be manipulated from the outside)
post_token_max_age_seconds = 600

# the URL of the pkg repository used
# the default points to a custom set of packages
# that have been configured to our specific
# TODO: to use your own, you must configure its
# fingerprint, as well
# requirements (i.e. to use libressl, no X11 etc)
jail_host_pkg_repository=https://briefkastenpkg.zeit.de/packages/
# to disable enforcing the use of our custom pkg repository, set the following to false:
use_custom_pkg_repository=true

########################################################################
# archive configuration
#
# submissions above a given size can optionally not be sent via email
# but instead editors will receive an email notification about the submission
# including a formatted link via which they can then access the actual files
# which have been archived in a single zip archive and PGP encrypted for the
# editors.
#
# the maxiumum size that the attachments of a drop may reach and
# still be attached to the notification email
# drops with larger attachments will contain a link to the encrypted archive
# instead
attachment_size_threshold = 1Gb

# the format is a simple python string with a single placeholder for the drop's id
# and MUST end with `.zip.pgp`
# it is up to the administrator of the system to make sure that this URL works,
# possible solutions include HTTP access, SFTP, SMB etc.
# dropbox_cleansed_archive_url_format = https://somehost.com/cleansed_drops/%s.zip.pgp
#
# the number of seconds that cleansing is allowed to take after which the cleanser will
# be terminated and the cleansing will be considered to have failed
cleanser_timeout_secs = 180
#
# IMPORTANT: once a format url is defined and the size exceeds the threshold
# the system will deposit drops permanently in the filesystem inside a separate
# toplevel folder of the dropnox named `archive_cleansed`.
#
# by default the directory of the archive is located inside the drop root directory
# however, since this is mounted into the worker jail via nullfs, once cannot (easily) mount
# network shares or other devices. in this case you can override the location and let it point
# to a directory inside the jail, i.e. if you mount an CIFS share on the jail host into
# /usr/jails/worker/mnt/cleansed_archive then you would set the location as follows:
# dropbox_cleansed_archive_path = /mnt/cleansed_archive
# 
# additionally another format can be defined, if present it will cause submissions
# whose cleansing has failed to be archived in their original, uncleansed state
# albeit encrypted.
#
# WARNING: enabling this feature means that submitters may inadvertently leak private
# information about themselves to the editors.
#
# BY ENABLING THIS FEATURE YOU ARE DISABLING ONE OF THE MAIN FEATURES THAT THIS
# APPLICATION PROVIDES - USE AT YOUR OWN RISK AND MAKE SURE THAT RECIPIENTS ARE
# AWARE OF THIS LIMITATION

# dropbox_failed_archive_url_format = https://somehost.com/dirty_drops/%s.zip.pgp
# note, that this, too MUST end with `.zip.pgp`
#
# and as with the cleansed archive you can provide a custom location, i.e.:
# dropbox_failed_archive_path = /mnt/failed_archive


###########################################################################
# janitor configuration
#
# number of days after which a dropbox will automatically be deleted
# (at this point it only contains optional replies from the editors)
drop_ttl_days = 180

###########################################################################
# watchdog configuration
#
# note that for some parameters no default values are provided, to avoid using
# a known and perhaps unwanted value by accident

# a token used to identify submissions posted by the watchdog
# you must configure the identical value for the watchdog process
# any submission POST that contains a key named ``testing_secret``
# and a value matching the value specified here will *not* be
# sent to the editors but instead to pre configured IMAP account where
# the watchdog has access to and can assert a successful submission.
#test_submission_secret = changeme

# the email and IMAP account that the watchdog submissions will be sent to
#watchdog_imap_recipient = changeme
#watchdog_imap_host =
#watchdog_imap_user =
#watchdog_imap_passwd =

#the email address that warnings about failed submissions will be sent to:
# multiple emails can be stated with space separated
#watchdog_notify_email = 

# the sender from which those emails will appear to be have sent from
watchdog_the_sender = noreply@briefkasten.watchdog

# here you can configure the SMTP server that will be used to send the notifications
watchdog_smtp_host = localhost
watchdog_smtp_port = 25
# if you define a username and password they will be used for authentication
# against the smpt server
# watchdog_smtp_username = xxx
# watchdog_smtp_password = xxx

# the grace period within which missing submissions will not be reported
# IOW this is how slow you allow your system to be
watchdog_max_process_secs = 600

# the owner and location of the watchdog installation
# if you are installing the watchdog into its own jail or onto a system
# you control entirely, it's safe to leave these as is.
# otherwise adjust them to your needs (i.e. when using your personal development
# machine for testing purposes)
watchdog_app_user = pyramid
watchdog_app_dir = /usr/local/briefkasten_watchdog

##################################################################
# the remaining values in this file usually don't need to be adjusted

# the default target to which we publish development versions (only used during development)
default_publish_devpi = https://pyfidelity.com/devpi/public/

# theme configuration
theme_package = briefkasten
use_diazo = true

[ez-zfs:data]
path = tank/data
create = true

[ez-zfs:briefkasten]
path = {zfs[data][path]}/briefkasten
create = true
set-exec = off
set-setuid = off

[ez-instance:webserver]
<= macro:ez-base
ip = 10.0.0.1
rc_require = appserver
roles =
  common
  webserver

[ez-instance:appserver]
<= macro:ez-base
ip = 10.0.0.2
fabfile = appserver.py
roles =
  common
  briefkasten
  supervisord
  appserver
mounts =
    src={zfs[briefkasten]} dst=/var/briefkasten create=true

[ez-instance:worker]
<= macro:ez-base
ip = 10.0.0.4
fabfile = appserver.py
local_pgpkey_path = pgp_pubkeys/
roles =
  common
  root_email
  briefkasten
  supervisord
  worker
mounts =
    src={zfs[briefkasten]} dst=/var/briefkasten create=true

[ez-instance:cleanser]
# this jail will become the blueprint for the cloned cleanser jails which will do the actual work.
<= macro:ez-base
ip = 10.0.0.3

# the host for the FreeBSD pkg repos
# this defaults to a particular instance dedicated to bootstrapping
# this project.
# If you run your own poudriere instance, you need to override these
# values
[plain-instance:buildhost-kvm]
ip = 10.100.4.48

[ez-master:buildhost]
instance = buildhost-kvm
# mfsBSD 11.1
bootstrap-fingerprint = 05:71:91:46:eb:45:54:74:c7:75:e2:06:b1:70:c6:bf
bootstrap-system-devices = ada0
bootstrap-system-pool-size = 20G
ansible-dhcp_host_sshd_interface = vtnet0
ansible-pf_map_interface = vtnet0
bootstrap-files = bootstrap-files/buildhost/
bootstrap-geli = no
bootstrap-bsd-url = http://ftp4.de.freebsd.org/pub/FreeBSD/releases/amd64/11.1-RELEASE/
# pin it for ezjail init:
ezjail-install-release = 11.1-RELEASE
ezjail-install-host = http://ftp4.de.freebsd.org
fingerprint = 7b:a6:01:e5:8e:f2:d2:49:a2:05:bb:14:c6:c6:9f:f5
firstboot-update = true
roles =
    jails_host
    poudriere
fabfile = poudriere.py
ansible-pkg_repo_signing_key = /usr/local/etc/ssl/keys/poudriere.key
ansible-poudriere_url_base = https://briefkastenpkg.zeit.de/
